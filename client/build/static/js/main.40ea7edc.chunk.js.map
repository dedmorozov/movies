{"version":3,"sources":["components/MovieCard/MovieCard.jsx","components/MoviesList/MoviesList.jsx","components/FormInput/FormInput.jsx","components/Form/Form.jsx","components/Modal/Modal.jsx","App.jsx","index.jsx"],"names":["MovieCard","_id","title","year","format","stars","removeMovie","className","type","onClick","src","alt","defaultProps","MoviesList","movies","map","movie","parseInt","FormInput","React","memo","name","value","handleChange","handleBlur","textError","toUpperCase","slice","placeholder","onChange","onBlur","autoComplete","propTypes","PropTypes","string","isRequired","func","NEW_MOVIE","MOVIE_ERRORS","Object","keys","filter","field","reduce","errors","Form","state","values","event","target","setState","handleSubmit","preventDefault","addMovie","props","prototype","hasOwnProperty","call","includes","test","isDisabledButton","hasErrors","some","err","this","onSubmit","id","disabled","PureComponent","Modal","active","setActive","aria-hidden","e","stopPropagation","currentUrl","window","location","href","server","App","useState","query","setQuery","isModalActive","setModalActive","moviesList","changeMoviesList","isSorted","setSorted","useEffect","a","loadMovies","fetch","response","json","loadToServer","method","headers","Accept","body","JSON","stringify","instance","URL","filteredMovies","toLowerCase","split","find","actor","sortedMovies","sort","b","localeCompare","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.40ea7edc.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nconst deleteCardImg = (\n  'https://www.freeiconspng.com/thumbs/remove-icon-png/remove-icon-png-3.png'\n);\n\nexport const MovieCard = ({\n  _id,\n  title,\n  year,\n  format,\n  stars,\n  removeMovie,\n}) => (\n  <div className=\"movies__card card\">\n    <div className=\"card__title\">\n      <h3 className=\"card__name\">{title}</h3>\n      <p className=\"card__year\">{year}</p>\n      <p className=\"card__id\">\n        #\n        {_id}\n      </p>\n    </div>\n    <div className=\"card__hidden\">\n      <p className=\"card__format\">\n        <strong>Format:</strong>\n        {' '}\n        {format}\n      </p>\n      <div className=\"card__actors\">\n        <p>\n          <strong>Actors:</strong>\n          {' '}\n          {stars}\n        </p>\n      </div>\n      <button\n        className=\"card__delete\"\n        type=\"button\"\n        title=\"delete film\"\n        onClick={() => {\n          removeMovie(_id);\n        }}\n      >\n        <img\n          src={deleteCardImg}\n          alt=\"delete\"\n        />\n      </button>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  _id: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  year: PropTypes.number.isRequired,\n  format: PropTypes.string.isRequired,\n  stars: PropTypes.string,\n  removeMovie: PropTypes.func.isRequired,\n};\n\nMovieCard.defaultProps = {\n  stars: '',\n};\n","/* eslint-disable no-underscore-dangle */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard/MovieCard';\nimport './MoviesList.scss';\n\nexport const MoviesList = ({ movies, removeMovie }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie._id}\n        _id={(movie._id)}\n        title={movie.title}\n        year={parseInt(movie.year, 10)}\n        format={movie.format}\n        stars={movie.stars}\n        removeMovie={removeMovie}\n      />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      year: PropTypes.number.isRequired,\n      format: PropTypes.string.isRequired,\n      stars: PropTypes.string,\n    }),\n  ),\n  removeMovie: PropTypes.func.isRequired,\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const FormInput = React.memo(({\n  name,\n  value,\n  handleChange,\n  handleBlur,\n  textError,\n}) => (\n  <label>\n    <h5>\n      {name[0].toUpperCase() + name.slice(1)}\n    </h5>\n    <input\n      name={name}\n      placeholder={`Enter ${name}`}\n      className={textError\n        ? 'form__input form__input--error'\n        : 'form__input'}\n      value={value}\n      onChange={handleChange}\n      onBlur={handleBlur}\n      autoComplete=\"off\"\n    />\n    <div className=\"form__error\">\n      {textError}\n    </div>\n  </label>\n));\n\nFormInput.propTypes = {\n  name: PropTypes.string.isRequired,\n  value: PropTypes.string,\n  handleChange: PropTypes.func.isRequired,\n  handleBlur: PropTypes.func.isRequired,\n  textError: PropTypes.string,\n};\n\nFormInput.defaultProps = {\n  value: '',\n  textError: null,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormInput } from '../FormInput/FormInput';\nimport '../Modal/Modal.scss';\n\nconst NEW_MOVIE = {\n  title: '',\n  year: '',\n  format: '',\n  stars: '',\n};\n\nconst MOVIE_ERRORS = Object.keys(NEW_MOVIE)\n  .filter(field => field === 'title'\n    || field === 'year'\n    || field === 'format'\n    || field === 'stars')\n  .reduce((errors, movie) => ({\n    ...errors,\n    [movie]: null,\n  }), {});\n\nexport class Form extends React.PureComponent {\n  state = {\n    values: NEW_MOVIE,\n    errors: MOVIE_ERRORS,\n  };\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n\n    this.setState(state => ({\n      values: {\n        ...state.values,\n        [name]: value,\n      },\n    }));\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    const { addMovie } = this.props;\n    const { values } = this.state;\n\n    addMovie(values);\n\n    this.setState({\n      values: NEW_MOVIE,\n    });\n  }\n\n  handleBlur = (event) => {\n    const { name, value } = event.target;\n    const { errors } = this.state;\n    const isControled = Object\n      .prototype\n      .hasOwnProperty\n      .call(errors, name);\n\n    if (!isControled) {\n      return;\n    }\n\n    this.setState(state => ({\n      errors: {\n        ...state.errors,\n        [name]: value ? null : `field ${name} is required`,\n      },\n    }));\n\n    if (value && name.includes('year')) {\n      this.setState(state => ({\n        errors: {\n          ...state.errors,\n          [name]: /[a-zA-Z]/g.test(value) ? 'Please enter a year' : null,\n        },\n      }));\n    }\n  }\n\n  isDisabledButton = () => {\n    const {\n      title,\n      year,\n      format,\n      stars,\n    } = this.state.values;\n    const hasErrors = Object.values(this.state.errors).some(err => err);\n\n    return !title\n      || !year\n      || !format\n      || !stars\n      || hasErrors;\n  }\n\n  render() {\n    const {\n      values,\n      errors,\n    } = this.state;\n    const {\n      handleChange,\n      handleSubmit,\n      handleBlur,\n    } = this;\n\n    return (\n      <form\n        className=\"modal__form form\"\n        onSubmit={handleSubmit}\n        id=\"form\"\n      >\n        <h3>Add movie</h3>\n\n        {Object.keys(values).map(field => (\n          <FormInput\n            key={field}\n            name={field}\n            value={values[field]}\n            handleChange={handleChange}\n            handleBlur={handleBlur}\n            textError={errors[field]}\n          />\n        ))}\n\n        <div>\n          <button\n            type=\"submit\"\n            className=\"form__button\"\n            disabled={this.isDisabledButton()}\n          >\n            Add\n          </button>\n        </div>\n      </form>\n    );\n  }\n}\n\nForm.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Modal.scss';\nimport { Form } from '../Form/Form';\n\nexport const Modal = ({\n  active,\n  setActive,\n  addMovie,\n}) => {\n  const handleCLick = () => setActive(!active);\n\n  return (\n    <div\n      className={active ? 'modal active' : 'modal'}\n      onClick={handleCLick}\n      aria-hidden=\"true\"\n    >\n      <div\n        className=\"modal__content\"\n        onClick={e => e.stopPropagation()}\n        aria-hidden=\"true\"\n      >\n        <Form addMovie={addMovie} />\n      </div>\n    </div>\n  );\n};\n\nModal.propTypes = {\n  active: PropTypes.bool.isRequired,\n  setActive: PropTypes.func.isRequired,\n  addMovie: PropTypes.func.isRequired,\n};\n","/* eslint-disable no-underscore-dangle */\nimport React, { useState, useEffect } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList/MoviesList';\nimport { Modal } from './components/Modal/Modal';\n\nconst currentUrl = window.location.href;\nconst server = currentUrl.includes('heroku')\n  ? currentUrl\n  : 'http://localhost:4000/';\n\nexport const App = () => {\n  const [query, setQuery] = useState('');\n  const [isModalActive, setModalActive] = useState(false);\n  const [moviesList, changeMoviesList] = useState([]);\n  const [isSorted, setSorted] = useState(true);\n\n  useEffect(async() => {\n    const movies = await loadMovies();\n\n    changeMoviesList(movies);\n  });\n\n  const loadMovies = async() => {\n    const response = await fetch(`${server}movies`);\n\n    return response.json();\n  };\n\n  const loadToServer = async(movie) => {\n    const response = await fetch(`${server}movies/`, {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(movie),\n    });\n\n    return response.json();\n  };\n\n  const addMovie = async(movie) => {\n    const instance = await loadToServer(movie);\n\n    changeMoviesList([...moviesList, instance]);\n  };\n\n  const removeMovie = async(id) => {\n    const URL = `${server}movies/${id}`;\n\n    await fetch(URL, { method: 'DELETE' });\n\n    changeMoviesList(moviesList.filter(movie => movie._id !== id));\n  };\n\n  const filteredMovies = moviesList.filter(movie => (\n    movie.title.toLowerCase().includes(\n      query.toLowerCase(),\n    )\n    || movie.stars.split(',').find(actor => actor.toLowerCase().includes(\n      query.toLowerCase(),\n    ))\n  ));\n\n  const sortedMovies = async() => {\n    setSorted(!isSorted);\n    moviesList.sort((a, b) => a.title.localeCompare(b.title));\n  };\n\n  return (\n    <div className=\"container\">\n      <header className=\"header\">\n        <button\n          type=\"button\"\n          onClick={() => setModalActive(!isModalActive)}\n          className=\"header__button\"\n        >\n          Add movie\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={sortedMovies}\n          className=\"header__button\"\n          disabled={!isSorted}\n        >\n          {isSorted ? 'Sort movies' : 'Sorted'}\n        </button>\n\n        {(query\n        && (\n          <button\n            onClick={() => setQuery('')}\n            type=\"button\"\n            className=\"header__button header__clear\"\n          >\n            Clear\n          </button>\n        ))}\n        <label>\n          <input\n            type=\"text\"\n            className=\"header__input\"\n            placeholder=\"Search by movie or actors\"\n            value={query}\n            onChange={(e) => {\n              setQuery(e.target.value);\n            }}\n          />\n        </label>\n      </header>\n\n      <MoviesList\n        movies={filteredMovies}\n        removeMovie={removeMovie}\n      />\n\n      <Modal\n        active={isModalActive}\n        setActive={setModalActive}\n        addMovie={addMovie}\n      />\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}